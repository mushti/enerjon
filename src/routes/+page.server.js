import { read16BitSigned, read32BitSigned, read32BitUnsigned, readInverterModel } from '$lib/index.js';

/** @type {import('./$types').PageLoad} */
export async function load({ params, depends }) {
	depends('app:random');
	const data = new URLSearchParams();
	data.append('optType', 'ReadRealTimeData');
	data.append('pwd', 'SNBFV8UFAC');


	let stats = await fetch('http://192.168.10.12', {
		method: 'POST',
		headers: {
			'Accept': 'application/json'
		},
		body: data
	}).then(async response => {
		let content = await response.json();
		// console.log(content)
		let grid = {
			voltage: content.Data[0] / 10,
			current: null,
			frequency: content.Data[3] / 100,
			export: {
				today: null,
				total: content.Data[31] / 10,
			},
			import: {
				today: content.Data[37] / 10,
				total: content.Data[33] / 10,
			},
			power: read32BitSigned(content.Data[29], content.Data[30]) / 10,
		}

		let inverter = {
			model: readInverterModel(content.Information[1]),
			sn: content.Information[1] >= 8 ? content.Information[2] : content.Information[3],
			dsp: content.Information[1] >= 8 ? content.Information[4] : content.Information[5],
			arm: content.Information[1] >= 8 ? content.Information[6] : content.Information[7],
			mode: content.Data[12],
			power: read16BitSigned(content.Data[2]),
			current: read16BitSigned(content.Data[1]) / 10,
			yield: {
				Today: content.Data[18] / 10,
				Total: read32BitUnsigned(content.Data[14], content.Data[15]) / 10,
			},
			temperatures: [
				read16BitSigned(content.Data[39]) / 10,
				read16BitSigned(content.Data[40]) / 10
			],
		}

		let panels = {
			power: content.Data[11],
			pv1: {
				voltage: content.Data[5] / 10,
				current: content.Data[6] / 10,
				power: read16BitSigned(content.Data[9]),
			},
			pv2: {
				voltage: content.Data[7] / 10,
				current: content.Data[8] / 10,
				power: read16BitSigned(content.Data[10]),
			},
		}

		return {
			grid,
			inverter,
			panels,
			EPS: {
				power: {
					data: content.Data[43],
					cal: read16BitSigned(content.Data[43])
				},
				voltage: {
					data: content.Data[41],
					cal: content.Data[41] / 10
				},
				current: {
					data: content.Data[42],
					cal: read16BitSigned(content.Data[42]) / 10
				}
			},
			Battery: {
				temperature: read16BitSigned(content.Data[77]) / 10,
				capacity: null,
				voltage: {
					data: content.Data[20],
					cal: content.Data[20] / 10
				},
				power: {
					data: content.Data[22],
					cal: read16BitSigned(content.Data[22])
				}
			},
			raw: {
				gridVoltage: content.Data[0],
				inverterCurrent: content.Data[1],
				inverterPower: content.Data[2],
				gridFrequency: content.Data[3],
				4: content.Data[4],
				PV1Voltage: content.Data[5],
				PV1Current: content.Data[6],
				PV2Voltage: content.Data[7],
				PV2Current: content.Data[8],
				PV1Power: content.Data[9],
				PV2Power: content.Data[10],
				PVPower: content.Data[11],
				inverterRunMode: content.Data[12],
				13: content.Data[13],
				yieldTotal1: content.Data[14],
				yieldTotal2: content.Data[15],
				16: content.Data[16],
				17: content.Data[17],
				yieldToday: content.Data[18],
				19: content.Data[19],
				batteryVoltage: content.Data[20],
				21: content.Data[21],
				batteryPower: content.Data[22],
				23: content.Data[23],
				24: content.Data[24],
				25: content.Data[25],
				26: content.Data[26],
				27: content.Data[27],
				28: content.Data[28],
				gridPower1: content.Data[29],
				gridPower2: content.Data[30],
				exportTotalEnergy: content.Data[31],
				32: content.Data[32],
				importTotalEnergy: content.Data[33],
				34: content.Data[34],
				35: content.Data[35],
				36: content.Data[36],
				importTodayEnergy: content.Data[37],
				38: content.Data[38],
				inverterTemperature1: content.Data[39],
				inverterTemperature2: content.Data[40],
				epsVoltage: content.Data[41],
				epsCurrent: content.Data[42],
				epsPower: content.Data[43],
				44: content.Data[44],
				45: content.Data[45],
				46: content.Data[46],
				47: content.Data[47],
				48: content.Data[48],
				49: content.Data[49],
				50: content.Data[50],
				51: content.Data[51],
				52: content.Data[52],
				53: content.Data[53],
				54: content.Data[54],
				55: content.Data[55],
				56: content.Data[56],
				57: content.Data[57],
				58: content.Data[58],
				59: content.Data[59],
				60: content.Data[60],
				61: content.Data[61],
				62: content.Data[62],
				63: content.Data[63],
				64: content.Data[64],
				65: content.Data[65],
				66: content.Data[66],
				67: content.Data[67],
				68: content.Data[68],
				69: content.Data[69],
				70: content.Data[70],
				71: content.Data[71],
				72: content.Data[72],
				73: content.Data[73],
				74: content.Data[74],
				75: content.Data[75],
				76: content.Data[76],
				batteryTemperature: content.Data[77],
				78: content.Data[78],
				79: content.Data[79],
				80: content.Data[80],
				81: content.Data[81],
				82: content.Data[82],
				83: content.Data[83],
				84: content.Data[84],
				85: content.Data[85],
				86: content.Data[86],
				87: content.Data[87],
				88: content.Data[88],
				89: content.Data[89],
				90: content.Data[90],
				91: content.Data[91],
				92: content.Data[92],
				93: content.Data[93],
				94: content.Data[94],
				95: content.Data[95],
				96: content.Data[96],
				97: content.Data[97],
				98: content.Data[98],
				99: content.Data[99],
				100: content.Data[100],
				101: content.Data[101],
				102: content.Data[102],
				103: content.Data[103],
				104: content.Data[104],
				105: content.Data[105],
				106: content.Data[106],
				107: content.Data[107],
				108: content.Data[108],
				109: content.Data[109],
				110: content.Data[110],
				111: content.Data[111],
				112: content.Data[112],
				113: content.Data[113],
				114: content.Data[114],
				115: content.Data[115],
				116: content.Data[116],
				117: content.Data[117],
				118: content.Data[118],
				119: content.Data[119],
				120: content.Data[120],
				121: content.Data[121],
				122: content.Data[122],
				123: content.Data[123],
				124: content.Data[124],
				125: content.Data[125],
				126: content.Data[126],
				127: content.Data[127],
				128: content.Data[128],
				129: content.Data[129],
				130: content.Data[130],
				131: content.Data[131],
				132: content.Data[132],
				133: content.Data[133],
				134: content.Data[134],
				135: content.Data[135],
				136: content.Data[136],
				137: content.Data[137],
				138: content.Data[138],
				139: content.Data[139],
				140: content.Data[140],
				141: content.Data[141],
				142: content.Data[142],
				143: content.Data[143],
				144: content.Data[144],
				145: content.Data[145],
				146: content.Data[146],
				147: content.Data[147],
				148: content.Data[148],
				149: content.Data[149],
				150: content.Data[150],
				151: content.Data[151],
				152: content.Data[152],
				153: content.Data[153],
				154: content.Data[154],
				155: content.Data[155],
				156: content.Data[156],
				157: content.Data[157],
				158: content.Data[158],
				159: content.Data[159],
				160: content.Data[160],
				161: content.Data[161],
				162: content.Data[162],
				163: content.Data[163],
				164: content.Data[164],
				165: content.Data[165],
				166: content.Data[166],
				167: content.Data[167],
				168: content.Data[168],
				169: content.Data[169],
				170: content.Data[170],
				171: content.Data[171],
				172: content.Data[172],
				173: content.Data[173],
				174: content.Data[174],
				175: content.Data[175],
				176: content.Data[176],
				177: content.Data[177],
				178: content.Data[178],
				179: content.Data[179],
				180: content.Data[180],
				181: content.Data[181],
				182: content.Data[182],
				183: content.Data[183],
				184: content.Data[184],
				185: content.Data[185],
				186: content.Data[186],
				187: content.Data[187],
				188: content.Data[188],
				189: content.Data[189],
				190: content.Data[190],
				191: content.Data[191],
				192: content.Data[192],
				193: content.Data[193],
				194: content.Data[194],
				195: content.Data[195],
				196: content.Data[196],
				197: content.Data[197],
				198: content.Data[198],
				199: content.Data[199],
			}
		}
	});

	return stats;
}